# Multi-stage build for production
FROM nvidia/cuda:12.2.0-runtime-ubuntu22.04 AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3-pip \
    ffmpeg \
    portaudio19-dev \
    libsndfile1 \
    curl \
    wget \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Builder stage
FROM base AS builder

WORKDIR /build

# Copy requirements
COPY requirements/server-updated.txt requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel \
    && pip install --no-cache-dir -r requirements.txt

# Download Whisper models
ARG WHISPER_MODEL=base
RUN python -c "import whisper; whisper.load_model('${WHISPER_MODEL}')"

# Production stage
FROM base AS production

# Create non-root user
RUN useradd -m -u 1000 whisper && \
    mkdir -p /app /models /logs && \
    chown -R whisper:whisper /app /models /logs

WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/dist-packages /usr/local/lib/python3.11/dist-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY --from=builder /root/.cache/whisper /home/whisper/.cache/whisper

# Copy application code
COPY --chown=whisper:whisper . /app

# Install the package
RUN pip install -e .

# Switch to non-root user
USER whisper

# Environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    WHISPER_CACHE_DIR=/home/whisper/.cache/whisper \
    MODEL_PATH=/models

# Expose ports
EXPOSE 9090 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:9090/health || exit 1

# Run the enhanced server
CMD ["python", "-m", "whisper_live.server_enhanced"]